{
  "hash": "e8e470fd2ae06c604ea9e01dca225bda",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: 'Data Train: Introduction to Machine Learning'\neditor_options:\n  chunk_output_type: console\n---\n\nThis is the workshop component to the [Machine Learning workshop in the Data Train\n2025 series](https://www.bremen-research.de/data-train/courses/course-details?event_id=114).\n\n# Workshop Details\n\n- 4 * 3-hour blocks, each ~90min theory, short break, ~90min hands-on\n- Hands-on exercises on local devices, **bring a laptop**!\n\n## Day 1\n\n- Theory / practice: 9:00 - 12:00\n  - k-Nearest-Neighbors\n  - General concepts\n  - Decision Trees\n- Break: 12:00 - 13:00\n- Theory / practice: 13:00 - 17:00\n  - Random Forest\n  - Model evaluation\n  - Boosting\n\n## Day 2\n\n- Theory / practice: 9:00 - 12:00\n  - Support Vector Machines (SVM)\n  - Hyperparameter Tuning\n  - Artifical Neural Networks\n- Break: 12:00 - 13:00\n- Theory / practice: 13:00 - 17:00\n  - Specific endpoints\n  - Variable Importance\n  - Discussion\n\n# Quick Start Instructions:\n\nWe will use R version **4.5.1**, but recent versions >= 4.1 should still work.\n\n1. Get the materials: In an R session, install the `{usethis}` package and enter\n\n```r\nusethis::create_from_github(repo = \"https://github.com/bips-hb/datatrain_workshop_ml.git\")\n```\n\nThis will create a new project with the workshop materials on your local machine, and it will also fork the repository to your GitHub account (you can suppress this with `fork = FALSE` but there's no harm in forking).  \n\n2. Install dependencies: Open the project and run `renv::restore(prompt = FALSE)` to install required R packages.\n\n\n3. Verify: If the following example code produces a plot, you're probably good to go:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(mlr3verse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n#> Loading required package: mlr3\n```\n\n\n:::\n\n```{.r .cell-code}\nrr <- resample(\n  tsk(\"sonar\"),\n  lrn(\"classif.ranger\", predict_type = \"prob\"),\n  rsmp(\"cv\", folds = 3)\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> INFO  [13:18:53.704] [mlr3] Applying learner 'classif.ranger' on task 'sonar' (iter 1/3)\n#> INFO  [13:18:54.048] [mlr3] Applying learner 'classif.ranger' on task 'sonar' (iter 2/3)\n#> INFO  [13:18:54.110] [mlr3] Applying learner 'classif.ranger' on task 'sonar' (iter 3/3)\n```\n\n\n:::\n\n```{.r .cell-code}\nautoplot(rr, type = \"roc\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){fig-align='center' width=672}\n:::\n:::\n\n\n(You'll learn what that piece of code does in the workshop :)\n\nIf `renv` gives you trouble, see below for manual R package installation instructions.\n\n\n# Setup Instructions\n\n1. Install R for your platform: <https://cran.r-project.org/>\n     - Installation instructions depend in whether you're using Windows, Linux (whichever flavor), or macOS.\n     - We assume the most recent R version, but all recent versions should work fine.\n2. If you have neither [Positron](https://positron.posit.co/download.html) nor [RStudio](https://posit.co/download/rstudio-desktop/) installed, install wither (Positron probably preferred)\n3. Create a local copy of this workshop repository (`https://github.com/bips-hb/datatrain_workshop_ml.git`), using any one of these options (use whichever you are most familiar with):\n    a) Using R and the `usethis` package: `usethis::create_from_github(repo = \"https://github.com/bips-hb/datatrain_workshop_ml.git\")`\n    b) Running this in the terminal: `git clone https://github.com/bips-hb/datatrain_workshop_ml.git`\n    c) Using RStudio's `New Project -> Version Control` dialog to clone the repository (analogously for whichever editor you're using). \n\n4. Install R packages required for the workshop by opening the workshop repository in Positron or RStudio and run `renv::restore(prompt = FALSE)`.  \n[`{renv}`](https://rstudio.github.io/renv/) will automatically install all R packages with the correct versions listed in `renv.lock`.\n\nIn some cases, installation with `{renv}` might fail, and if that happens move on to the next section to install packages manually.\n\n## Manual package installation instructions \n\n<details>\n<summary>Click to expand instructions</summary>\n\nYou should only need to install all packages manually if you were not able to use `renv` to install them automatically. \n(Or if you're trying to get this code to run in a different environment than this repository)\n\nIf you want to \"disable\" `renv` so you can manually install packages, open `.Rprofile` and comment out the following line:\n\n```\nsource(\"renv/activate.R\")\n```\n\nThe you can directly use [`{pak}`](https://pak.r-lib.org/dev/index.html) for installation, which will try to automatically install system dependencies on Linux (see next note) if possible:\n\n```r\npackages <- c(\n  # Data\n  \"palmerpenguins\", \"mlr3data\",\n  # Learner backends\n  \"ranger\", \"xgboost\", \"kknn\", \"rpart\", \"e1071\", \"randomForest\",\n  \"mlr3verse\", \"mlr3filters\", # installs \"mlr3\", \"mlr3learners\", \"mlr3viz\", \"mlr3tuning\" ...\n  \"precrec\", # ROC plots via mlr3, not auto-installed with mlr3viz\n  # Viz / interpretability\n  \"rpart.plot\", \"effectplots\",\n  # Plotting / infrastructure, goodies\n  \"rmarkdown\", \"ggplot2\", \"patchwork\", \"usethis\", \"dplyr\", \"purrr\", \"ragg\"\n)\n\n# Installing pak for faster package installation\ninstall.packages(\"pak\")\n\n# Install packages if not available already\npak::pak(packages)\n```\n\n</details>\n\n### Linux Note\n\n<details>\n<summary>Click to expand</summary>\n\nIf you're working on a Linux distribution such as Ubuntu (or something Ubuntu-based),\nyou may have to install some system packages with `sudo apt-get install ...` beforehand.\n\nFor Ubuntu it would look like this, which you can run in the terminal of your choice:\n\n```sh\nsudo apt-get install -y git\nsudo apt-get install -y libcurl4-openssl-dev\nsudo apt-get install -y libfontconfig1-dev\nsudo apt-get install -y libfreetype6-dev\nsudo apt-get install -y libfribidi-dev\nsudo apt-get install -y libgit2-dev\nsudo apt-get install -y libglpk-dev\nsudo apt-get install -y libgmp3-dev\nsudo apt-get install -y libharfbuzz-dev\nsudo apt-get install -y libicu-dev\nsudo apt-get install -y libjpeg-dev\nsudo apt-get install -y libpng-dev\nsudo apt-get install -y libssl-dev\nsudo apt-get install -y libtiff-dev\nsudo apt-get install -y libxml2-dev\nsudo apt-get install -y make\nsudo apt-get install -y pandoc\nsudo apt-get install -y zlib1g-dev\n```\n\n</details>\n\n# Further Reading\n\n## Code examples\n\nWe rely on the `mlr3` framework and its free online book for the hands-on part of the workshop:\n\n- [Bischl, B., Sonabend, R., Kotthoff, L., & Lang, M. *Applied Machine Learning Using mlr3 in R*. (CRC Press, 2024)](https://mlr3book.mlr-org.com)\n\n## Free Lectures (online with slides + videos)\n\nLecture materials take inspiration from these free and open-source lectures:\n\n- [Introduction to Machine Learning (\"I2ML\")](https://slds-lmu.github.io/i2ml)\n- [Interpretable Machine Learning](https://slds-lmu.github.io/iml)\n\n## Textbooks\n\n- [An Introduction to Statistical Learning: with Applications in R. (Springer, 2013).](https://www.statlearning.com/)\n- [Hastie, T., Tibshirani, R. & Friedman, J. The Elements of Statistical Learning: Data Mining, Inference, and Prediction, Second Edition. (Springer, 2009).](https://web.stanford.edu/~hastie/ElemStatLearn/)\n- [Murphy, K. P. Machine Learning: A Probabilistic Perspective. (MIT Press, 2012).](https://probml.github.io/pml-book/)\n- [Bishop, C. M. Pattern Recognition and Machine Learning. Information Science and Statistics. (Springer, 2006).](https://link.springer.com/book/9780387310732)\n- [Molnar, M. Interpretable Machine Learning: A Guide for Making Black Box Models Explainable (2023)](https://christophm.github.io/interpretable-ml-book/)\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}